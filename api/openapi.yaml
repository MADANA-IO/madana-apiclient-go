openapi: 3.0.1
info:
  description: "<h1>Using the madana-api</h1>\n       <p>This documentation contains\
    \ a Quickstart Guide, relating client functionality and information about the\
    \ available \n       endpoints and used datamodels.   </p>    \n\n <p> The madana-api\
    \ and its implementations are still in heavy development. This means that there\
    \ may be problems in our protocols, or there may be mistakes in our implementations.\
    \ We take security vulnerabilities very seriously. If you discover a security\
    \ issue, please bring it to our attention right away! If you find a vulnerability\
    \ that may affect live deployments -- for example, by exposing a remote execution\
    \ exploit -- please send your report privately to info@madana.io. Please DO NOT\
    \ file a public issue. If the issue is a protocol weakness that cannot be immediately\
    \ exploited or something not yet deployed, just discuss it openly   </p> \n <br>\n\
    \  <p> Note: Not all functionality might be acessible without having accquired\
    \ and api-license token. For more information visit <a href=\"https://www.madana.io\"\
    >www.madana.io</a> </p>    \n  <br>"
  title: madana-api
  version: 0.5.0-master.2
servers:
- url: //api.madana.io/rest/
tags:
- description: Used to Handle all actions in reference to a Password.
  name: AccountService
- description: |-
    Authentication service
    Used to get an Token in exchange for the sent credentials.
  name: AuthenticationService
- name: CertificateService
- name: DataCollectionService
- name: EnclaveService
- name: EnvironmentService
- name: NodeService
- name: OrganizationService
- description: Endpoint for the handling of Analysis Requests.
  name: RequestService
- name: SocialPlatformService
- description: Endpoint used for all actions related to users within the system.
  name: SocialService
- name: SystemService
- description: Endpoint which handles user creation, editing & deletion.
  name: UserService
paths:
  /account/activation/{token}:
    get:
      operationId: activateUser
      parameters:
      - in: path
        name: token
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - AccountService
  /account/password:
    post:
      description: Sends an Password reset mail to the given MailAddress
      operationId: createPasswordReset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_MailAddress'
        description: '- the MaiAddress under which the user has signed up'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: HTTP Status Accepted if the mail has been send, NOT FOUND
                  if the mail address could be found in the system or EXPECTATION
                  FAILED when an error occured
                format: binary
                type: string
            application/xml:
              schema:
                description: HTTP Status Accepted if the mail has been send, NOT FOUND
                  if the mail address could be found in the system or EXPECTATION
                  FAILED when an error occured
                format: binary
                type: string
          description: HTTP Status Accepted if the mail has been send, NOT FOUND if
            the mail address could be found in the system or EXPECTATION FAILED when
            an error occured
      summary: Sends an Password reset mail to the given MailAddress.
      tags:
      - AccountService
      x-codegen-request-body-name: body
    put:
      description: Receives the Password reset and tries to set the provided password
        for the user. The Password will only be set if a valid token is provided
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_PasswordReset'
        description: '- the MDN_PasswordReset Object'
        required: false
      responses:
        "204":
          content:
            application/json:
              schema:
                description: HTTP Status ACCEPTED if password has been reset, FORBIDDEN
                  if the token is invalid, NOT FOUND if the email is invalid, EXPECTATION
                  FAILED if an error occured
                format: binary
                type: string
            application/xml:
              schema:
                description: HTTP Status ACCEPTED if password has been reset, FORBIDDEN
                  if the token is invalid, NOT FOUND if the email is invalid, EXPECTATION
                  FAILED if an error occured
                format: binary
                type: string
          description: HTTP Status ACCEPTED if password has been reset, FORBIDDEN
            if the token is invalid, NOT FOUND if the email is invalid, EXPECTATION
            FAILED if an error occured
      summary: Receives the Password reset and tries to set the provided password
        for the user.
      tags:
      - AccountService
      x-codegen-request-body-name: body
  /account/verifymail:
    get:
      description: Used to request a new  activation-mail for the user
      operationId: requestVerificationMail
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                description: If the mail has been sent
                type: object
          description: If the mail has been sent
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Used to request a new  activation-mail for the user.
      tags:
      - AccountService
  /authentication:
    get:
      description: Used to validate the active connection with the API
      operationId: getObject
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                description: If the usage could be generated
                type: object
          description: If the usage could be generated
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Used to validate the active connection with the API.
      tags:
      - AuthenticationService
    post:
      description: Authenticates a new user and returns the token (  forbidden if
        the credentials cannot be validated )
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_UserCredentials'
        description: the credentials used to validate the user
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MDN_Token'
          description: If the credentials could be verified
        "403":
          content: {}
          description: If the credentials could not be verified
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Authenticates a new user and returns the token (  forbidden if the
        credentials cannot be validated ).
      tags:
      - AuthenticationService
      x-codegen-request-body-name: body
  /authentication/application:
    post:
      description: Authenticates a new application and returns the token
      operationId: authenticateApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_Certificate'
        description: the credentials used to validate the user
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MDN_Token'
          description: If the application certificate could be verified
        "401":
          content: {}
          description: If the application could not be found
        "403":
          content: {}
          description: If the an error occurs verifying the Application certificate
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Authenticates a new application and returns the token.
      tags:
      - AuthenticationService
      x-codegen-request-body-name: body
  /authentication/ethereum/{wallet}:
    get:
      description: Returns a nonce for the client which is used as content for the
        to be created signature
      operationId: getNonceForEthereumWallet
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - description: |-
          - wallet address as String
          * @HTTP 417 If the address is not valid
        in: path
        name: wallet
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MDN_Token'
          description: ""
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Returns a nonce for the client which is used as content for the to
        be created signature.
      tags:
      - AuthenticationService
    post:
      operationId: authenticateEthereumWallet
      parameters:
      - description: the wallet which should be authenticated
        in: path
        name: wallet
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_OAuthToken'
        description: Token containing nonce and signate
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
        "417":
          content: {}
          description: If the nonce could not be verified
        "500":
          content: {}
          description: If an servsided error occurs
      tags:
      - AuthenticationService
      x-codegen-request-body-name: body
  /authentication/ethereum/{wallet}/challenge:
    post:
      operationId: authenticateWithEthereumChallenge
      parameters:
      - description: the wallet which should be authenticated
        in: path
        name: wallet
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_OAuthToken'
        description: Token containing nonce and signate
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
        "417":
          content: {}
          description: If the nonce could not be verified
        "500":
          content: {}
          description: If an servsided error occurs
      tags:
      - AuthenticationService
      x-codegen-request-body-name: body
  /authentication/facebook:
    post:
      description: Used as Callback URL when users have successfully authorized their
        facbeook account
      operationId: setFacebookUID
      requestBody:
        content:
          application/json:
            schema:
              description: ""
              type: string
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      summary: Used as Callback URL when users have successfully authorized their
        facbeook account.
      tags:
      - AuthenticationService
      x-codegen-request-body-name: body
  /authentication/fractal:
    get:
      description: Returns the AUthorization URL to verify a Twitter Accounts
      operationId: getFractalAuthenticationURL
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      summary: Returns the AUthorization URL to verify a Twitter Accounts.
      tags:
      - AuthenticationService
    post:
      operationId: setFractalUID
      requestBody:
        content:
          application/json:
            schema:
              description: ""
              type: string
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - AuthenticationService
      x-codegen-request-body-name: body
  /authentication/twitter:
    get:
      description: Returns the AUthorization URL to verify a Twitter Accounts
      operationId: getTwitterAuthenticationURL
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      summary: Returns the AUthorization URL to verify a Twitter Accounts.
      tags:
      - AuthenticationService
    post:
      operationId: setTwitterUID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_OAuthToken'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - AuthenticationService
      x-codegen-request-body-name: body
  /certificates:
    post:
      description: Issues certificates for logged-in users
      operationId: authenticateCertificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_Data'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_MDN_Certificate'
          description: If the Request have been signed could be verified
        "403":
          content: {}
          description: If an error occurs
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Issues certificates for logged-in users.
      tags:
      - CertificateService
      x-codegen-request-body-name: body
  /certificates/root:
    get:
      operationId: getRootCertificate
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - CertificateService
  /certificates/{fingerprint}:
    get:
      operationId: getCertificateByFingerprint
      parameters:
      - in: path
        name: fingerprint
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - CertificateService
  /datacollection/methods:
    get:
      operationId: getNodes
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - DataCollectionService
  /datacollection/types:
    get:
      operationId: getTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - DataCollectionService
  /datacollection/types/{name}/methods:
    get:
      operationId: getMethodsForType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - DataCollectionService
  /enclaves:
    get:
      description: Returns UUIDs of existing analyses.
      operationId: getEnclaves
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - description: '- if Queryparam "created=true" only the UUIDs of own Requests
          are shown'
        in: query
        name: created
        schema:
          default: "true"
          type: string
      - description: Used for offset pagination. Limit/Offset Paging would look like
          GET /request?limit=20&offset=100. This query would return the 20 rows starting
          with the 100th row
        in: query
        name: limit
        schema:
          default: "30"
          type: string
      - description: Used for offset pagination. Limit/Offset Paging would look like
          GET /request?limit=20&offset=100. This query would return the 20 rows starting
          with the 100th row
        in: query
        name: offset
        schema:
          default: "0"
          type: string
      - in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the actions could be loaded
                format: binary
                type: string
          description: If the actions could be loaded
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Returns UUIDs of existing analyses.
      tags:
      - EnclaveService
    post:
      operationId: createEnclaveRunRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EnclaveRunRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
      x-codegen-request-body-name: body
  /enclaves/types:
    get:
      operationId: getEnclaveTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
  /enclaves/{uuid}:
    get:
      operationId: getEnclave
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
  /enclaves/{uuid}/approval:
    post:
      operationId: approveEnclave
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EnclaveRunningAttestationApproval'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EnclaveRunningAttestationApproval'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
      x-codegen-request-body-name: body
  /enclaves/{uuid}/assign:
    post:
      operationId: assignEnclaveAgent
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_NodeInfo'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_NodeInfo'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
      x-codegen-request-body-name: body
  /enclaves/{uuid}/attestation:
    post:
      operationId: attestateEnclave
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EnclaveRunningAttestation'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_EnclaveRunningAttestation'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
      x-codegen-request-body-name: body
  /enclaves/{uuid}/history:
    post:
      operationId: addHistory
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SignedData'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SignedData'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
      x-codegen-request-body-name: body
  /enclaves/{uuid}/kill:
    post:
      operationId: killEnclave
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnclaveService
  /environments:
    get:
      description: Returns UUIDs of existing analyses.
      operationId: getEnvironments
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - description: '- if Queryparam "created=true" only the UUIDs of own Requests
          are shown'
        in: query
        name: created
        schema:
          default: "true"
          type: string
      - description: Used for offset pagination. Limit/Offset Paging would look like
          GET /request?limit=20&offset=100. This query would return the 20 rows starting
          with the 100th row
        in: query
        name: limit
        schema:
          default: "30"
          type: string
      - in: query
        name: name
        schema:
          type: string
      - description: Used for offset pagination. Limit/Offset Paging would look like
          GET /request?limit=20&offset=100. This query would return the 20 rows starting
          with the 100th row
        in: query
        name: offset
        schema:
          default: "0"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the actions could be loaded
                format: binary
                type: string
          description: If the actions could be loaded
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Returns UUIDs of existing analyses.
      tags:
      - EnvironmentService
    post:
      operationId: publishEnvironment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_EnvironmentPublishingRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
      x-codegen-request-body-name: body
  /environments/published:
    get:
      operationId: getPublishedEnvironments
      parameters:
      - in: query
        name: limit
        schema:
          default: "30"
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: offset
        schema:
          default: "0"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
  /environments/subscriptions:
    get:
      operationId: getSubscribedEnvironments
      parameters:
      - in: query
        name: limit
        schema:
          default: "30"
          type: string
      - in: query
        name: offset
        schema:
          default: "0"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
  /environments/{uuid}:
    delete:
      operationId: deleteEnvironment
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
    get:
      operationId: getEnvironment
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
    put:
      operationId: updateEnvironment
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_Environment'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_Environment'
        required: false
      responses:
        "204":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
      x-codegen-request-body-name: body
  /environments/{uuid}/subscribe:
    delete:
      operationId: deleteEnvironmentSubscription
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
    post:
      operationId: subscribeEnvironment
      parameters:
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - EnvironmentService
  /nodes:
    get:
      operationId: getNodes2
      parameters:
      - in: query
        name: owner
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - NodeService
    post:
      operationId: postNodeInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_NodeInfo'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - NodeService
      x-codegen-request-body-name: body
  /nodes/bootstrap:
    get:
      operationId: getBootstrap
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - NodeService
  /organizations:
    get:
      operationId: getNodes3
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - OrganizationService
  /platforms:
    get:
      description: Used to Handle Incoming Webhooks from Facebook
      operationId: getPlatforms
      requestBody:
        content:
          application/json:
            schema:
              description: ""
              type: string
          application/xml:
            schema:
              description: ""
              type: string
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      summary: Used to Handle Incoming Webhooks from Facebook.
      tags:
      - SocialPlatformService
      x-codegen-request-body-name: body
  /platforms/twitter:
    get:
      description: Used to Handle Incoming Webhooks from Twitter
      operationId: registerTwitterWebhook
      parameters:
      - in: query
        name: crc_token
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      summary: Used to Handle Incoming Webhooks from Twitter.
      tags:
      - SocialPlatformService
    post:
      description: Used to Handle Incoming Webhooks from Facebook
      operationId: listenTwitterWebhook
      requestBody:
        content:
          application/json:
            schema:
              description: ""
              type: string
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
            application/xml:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      summary: Used to Handle Incoming Webhooks from Facebook.
      tags:
      - SocialPlatformService
      x-codegen-request-body-name: body
  /requests:
    get:
      description: Returns UUIDs of existing analyses.
      operationId: getAllRequests
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - description: '- if Queryparam "created=true" only the UUIDs of own Requests
          are shown'
        in: query
        name: created
        schema:
          default: "false"
          type: string
      - description: '- if queryparam "history" is set to true, endpoint returns all
          user actions. False per default.'
        in: query
        name: history
        schema:
          default: "false"
          type: string
      - description: Used for offset pagination. Limit/Offset Paging would look like
          GET /request?limit=20&offset=100. This query would return the 20 rows starting
          with the 100th row
        in: query
        name: limit
        schema:
          default: "30"
          type: string
      - description: '-  if Queryparam "new=true" only the UUIDs of new Requests (
          Requests the user has not participated in and still allow participation)
          are shown'
        in: query
        name: new
        schema:
          default: "true"
          type: string
      - description: Used for offset pagination. Limit/Offset Paging would look like
          GET /request?limit=20&offset=100. This query would return the 20 rows starting
          with the 100th row
        in: query
        name: offset
        schema:
          default: "0"
          type: string
      - in: query
        name: preview
        schema:
          default: "false"
          type: string
      - in: query
        name: ready
        schema:
          default: "false"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the actions could be loaded
                format: binary
                type: string
          description: If the actions could be loaded
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Returns UUIDs of existing analyses.
      tags:
      - RequestService
    post:
      description: Endpoint used to create a new Analysis Request
      operationId: createNewRequest
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SignedData_utils'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SignedData_utils'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the request has been created
                type: string
          description: If the request has been created
        "403":
          content: {}
          description: If the calling entity is not allowed to create the request
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Endpoint used to create a new Analysis Request.
      tags:
      - RequestService
      x-codegen-request-body-name: body
  /requests/actions:
    get:
      operationId: getActions
      parameters:
      - in: query
        name: limit
        schema:
          default: "30"
          type: string
      - in: query
        name: offset
        schema:
          default: "0"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - RequestService
  /requests/stats:
    get:
      operationId: getStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - RequestService
  /requests/{uuid}:
    get:
      description: Returns the details for certain Request. When requesting an analysis
        a view of the analysis is stored in the database
      operationId: getRequest
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the consent has been received could be loaded
                format: binary
                type: string
          description: If the consent has been received could be loaded
        "404":
          content: {}
          description: If the uuid of the request cannot be found
      summary: Returns the details for certain Request.
      tags:
      - RequestService
    post:
      description: Endpoint used initialized addition datacollection parameters for
        requester
      operationId: initRequestParameters
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              description: ""
              type: string
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the request has been created
                type: string
          description: If the request has been created
        "403":
          content: {}
          description: If the calling entity is not allowed to create the request
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Endpoint used initialized addition datacollection parameters for requester.
      tags:
      - RequestService
      x-codegen-request-body-name: body
  /requests/{uuid}/agent:
    get:
      description: Is called from the APE to request all parked datasets. Returns
        the transmitted data for certain Request. When requesting the data, the status
        of the request is automatically set to processing.
      operationId: getAgent
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the consent has been received could be loaded
                format: binary
                type: string
          description: If the consent has been received could be loaded
        "403":
          content: {}
          description: If the endpoint is not called from the set agent / APE
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If the AnalysisRequest has been completed
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Is called from the APE to request all parked datasets.
      tags:
      - RequestService
    post:
      description: Is called from the APE to request all parked datasets. Returns
        the transmitted data for certain Request. When requesting the data, the status
        of the request is automatically set to processing.
      operationId: setAgent
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the consent has been received could be loaded
                format: binary
                type: string
          description: If the consent has been received could be loaded
        "403":
          content: {}
          description: If the endpoint is not called from the set agent / APE
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If the AnalysisRequest has been completed
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Is called from the APE to request all parked datasets.
      tags:
      - RequestService
  /requests/{uuid}/cancel:
    post:
      description: Endpoint is called from the Analysis Processing entity to submit
        the result
      operationId: cancelProcessing
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SignedData_utils'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SignedData_utils'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the result has been received
                format: binary
                type: string
          description: If the result has been received
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If  the AnalysisRequest has been completed, or the result is
            malformed
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Endpoint is called from the Analysis Processing entity to submit the
        result.
      tags:
      - RequestService
      x-codegen-request-body-name: body
  /requests/{uuid}/consent:
    post:
      description: Used to give consent for request. If the Endpoint is called from
        the creator of the Analysis, the status of the request is set to completed.
        If called by another is interpreted as giving consent to participate.
      operationId: giveConsent
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the consent has been received could be loaded
                format: binary
                type: string
          description: If the consent has been received could be loaded
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If no consent can be received anymore because the AnalysisRequest
            is already being processed or completed
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Used to give consent for request.
      tags:
      - RequestService
  /requests/{uuid}/data:
    get:
      description: Is called from the APE to request all parked datasets. Returns
        the transmitted data for certain Request. When requesting the data, the status
        of the request is automatically set to processing.
      operationId: getData
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json_SignedData_utils'
          description: If the consent has been received could be loaded
        "403":
          content: {}
          description: If the endpoint is not called from the set agent / APE
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If the AnalysisRequest has been completed
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Is called from the APE to request all parked datasets.
      tags:
      - RequestService
    post:
      description: Is used to upload and park the data till the AnalysisRequest gets
        processed
      operationId: addData
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SignedData_utils'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the data has been sucessfully received
                format: binary
                type: string
          description: If the data has been sucessfully received
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If an unprivileged user tries to send data
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Is used to upload and park the data till the AnalysisRequest gets processed.
      tags:
      - RequestService
      x-codegen-request-body-name: body
  /requests/{uuid}/result:
    get:
      description: Can be called from creator to request the AnalysisResult.
      operationId: getResult
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the consent has been received could be loaded
                format: binary
                type: string
          description: If the consent has been received could be loaded
        "403":
          content: {}
          description: If the endpoint is not called from the set agent / APE
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If the AnalysisRequest has been completed
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Can be called from creator to request the AnalysisResult.
      tags:
      - RequestService
    post:
      description: Endpoint is called from the Analysis Processing entity to submit
        the result
      operationId: setResult
      parameters:
      - description: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        in: header
        name: Authorization
        schema:
          type: string
      - in: path
        name: uuid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_SignedData_utils'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_SignedData_utils'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                description: If the result has been received
                format: binary
                type: string
          description: If the result has been received
        "404":
          content: {}
          description: If the uuid of the request cannot be found
        "406":
          content: {}
          description: If  the AnalysisRequest has been completed, or the result is
            malformed
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Endpoint is called from the Analysis Processing entity to submit the
        result.
      tags:
      - RequestService
      x-codegen-request-body-name: body
  /social:
    get:
      description: Returns all Platforms / Systems that can be Connected to the MADANA
        Service
      operationId: getPlatforms2
      responses:
        "200":
          content:
            application/json:
              schema:
                description: List<{MDN_SocialPlatform>
                format: binary
                type: string
          description: List<{MDN_SocialPlatform>
      summary: Returns all Platforms / Systems that can be Connected to the MADANA
        Service.
      tags:
      - SocialService
  /social/feed/{platform}:
    get:
      operationId: getSocialPlatformFeed
      parameters:
      - in: path
        name: platform
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - SocialService
  /social/profiles/me:
    get:
      operationId: getMyProfile
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - SocialService
  /social/profiles/{username}:
    get:
      operationId: getUserProfile
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: simple
        schema:
          default: "false"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - SocialService
  /social/profiles/{username}/simple:
    get:
      operationId: getUserProfile
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - SocialService
  /social/ranking:
    get:
      description: Returns the Ranking by PTS within the System
      operationId: getRanking
      parameters:
      - in: query
        name: limit
        schema:
          default: "99"
          type: string
      - in: query
        name: offset
        schema:
          default: "0"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: Map<String, String> - The key is the username and the
                  value are the points
                format: binary
                type: string
          description: Map<String, String> - The key is the username and the value
            are the points
      summary: Returns the Ranking by PTS within the System.
      tags:
      - SocialService
  /system/health:
    get:
      operationId: getAllObjects
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - SystemService
  /system/usage:
    get:
      description: Return the current application usage
      operationId: getApplication
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  properties: {}
                  type: object
                description: If the usage could be generated
                type: object
          description: If the usage could be generated
        "500":
          content: {}
          description: If an servsided error occurs
      summary: Return the current application usage.
      tags:
      - SystemService
  /users:
    post:
      description: Creates a new user object
      operationId: createObject
      parameters:
      - in: query
        name: referrer
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_User'
        description: provided user object inheriting properties and credentials
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: HTTP Response OK
                format: binary
                type: string
          description: HTTP Response OK
      summary: Creates a new user object.
      tags:
      - UserService
      x-codegen-request-body-name: body
  /users/{username}:
    delete:
      description: Deletes an User based on the provided id and securitycontext
      operationId: deleteObject
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                description: HTTP Response OK
                format: binary
                type: string
            application/xml:
              schema:
                description: HTTP Response OK
                format: binary
                type: string
          description: HTTP Response OK
      summary: Deletes an User based on the provided id and securitycontext.
      tags:
      - UserService
    get:
      operationId: getObject2
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - UserService
    put:
      description: Updates Userproperties based on the provided user object
      operationId: updateObject
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_User'
        description: the new user object inherting all properties that should be change
        required: false
      responses:
        "204":
          content:
            application/json:
              schema:
                description: HTTP Response OK
                format: binary
                type: string
            application/xml:
              schema:
                description: HTTP Response OK
                format: binary
                type: string
          description: HTTP Response OK
      summary: Updates Userproperties based on the provided user object.
      tags:
      - UserService
      x-codegen-request-body-name: body
  /users/{username}/avatars:
    get:
      operationId: getAvatars
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - UserService
    post:
      operationId: setAvatar
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_UserProfileImage'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MDN_UserProfileImage'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - UserService
      x-codegen-request-body-name: body
  /users/{username}/certificates:
    get:
      operationId: getCertificates
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - UserService
  /users/{username}/enclavehistory:
    get:
      operationId: getEnclaveHistory
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      - in: query
        name: limit
        schema:
          default: "30"
          type: string
      - in: query
        name: offset
        schema:
          default: "0"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - UserService
  /users/{username}/settings:
    post:
      operationId: setSettings
      parameters:
      - in: path
        name: username
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/json_MDN_UserSetting'
          application/xml:
            schema:
              $ref: '#/components/schemas/json_MDN_UserSetting'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                description: ""
                format: binary
                type: string
          description: ""
      tags:
      - UserService
      x-codegen-request-body-name: body
  /users/{username}/social/{platform}/{ident}:
    delete:
      description: Deletes linked account from the user and securitycontext
      operationId: deleteObject
      parameters:
      - in: path
        name: ident
        required: true
        schema:
          type: string
      - in: path
        name: platform
        required: true
        schema:
          type: string
      - in: path
        name: username
        required: true
        schema:
          type: string
      responses:
        "204":
          content:
            application/json:
              schema:
                description: HTTP Response OK
                format: binary
                type: string
            application/xml:
              schema:
                description: HTTP Response OK
                format: binary
                type: string
          description: HTTP Response OK
      summary: Deletes linked account from the user and securitycontext.
      tags:
      - UserService
components:
  schemas:
    json_Disk_config:
      description: ""
      example:
        readonly: true
        roothash: '...'
        roothash_offset: 12345
        disk: '...'
      properties:
        readonly:
          description: ""
          type: boolean
        roothash:
          description: ""
          type: string
        roothash_offset:
          description: ""
          format: int32
          type: integer
        disk:
          description: ""
          type: string
      title: Disk_config
      type: object
    json_EnclavePort:
      description: ""
      example:
        name: '...'
        port: '...'
        protocol: '...'
      properties:
        name:
          description: ""
          type: string
        port:
          description: ""
          type: string
        protocol:
          description: ""
          type: string
      title: EnclavePort
      type: object
    json_EnclaveProcess:
      description: ""
      example:
        process:
          outputStream: {}
          errorStream: {}
          inputStream: {}
          alive: true
        portMapping:
          property1: '...'
          property2: '...'
        status: '...'
        ports:
        - name: '...'
          port: '...'
          protocol: '...'
        - name: '...'
          port: '...'
          protocol: '...'
        enclaveInputstream: {}
        consoleOutput: '...'
        internalAttesationServer: '...'
        internalWireguardServer: '...'
        wgInterface:
          port: '...'
          address: '...'
          name: '...'
        internalIdent: '...'
        startupTime: '...'
        remoteControlServer: '...'
        startupCMD: '...'
        endingTime: '...'
        publicIdent: '...'
        wireguardServer: '...'
        attestationServer: '...'
        internalRemoteControlServer: '...'
        enclaveIdent: '...'
        signerIdent: '...'
        wireguardPublicKey: '...'
        environment:
          description: '...'
          roothash: '...'
          defaultRunConfiguration:
            args:
            - '...'
            - '...'
            environment:
              property1: '...'
              property2: '...'
            disk_config:
            - {}
            - {}
            run: '...'
          published: true
          name: '...'
          rootHashOffset: '...'
          content:
          - '...'
          - '...'
          size: '...'
          ipfsHash: '...'
          packages:
          - '...'
          - '...'
          uuid: '...'
      properties:
        process:
          $ref: '#/components/schemas/json_Process'
        portMapping:
          additionalProperties:
            type: string
          description: ""
          type: object
        status:
          description: ""
          type: string
        ports:
          description: ""
          items:
            $ref: '#/components/schemas/json_EnclavePort'
          type: array
        enclaveInputstream:
          description: ""
          example: {}
          title: InputStream
          type: object
        consoleOutput:
          description: ""
          type: string
        internalAttesationServer:
          description: ""
          type: string
        internalWireguardServer:
          description: ""
          type: string
        wgInterface:
          $ref: '#/components/schemas/json_WireguardInterface'
        internalIdent:
          description: ""
          type: string
        startupTime:
          description: ""
          type: string
        remoteControlServer:
          description: ""
          type: string
        startupCMD:
          description: ""
          type: string
        endingTime:
          description: ""
          type: string
        publicIdent:
          description: ""
          type: string
        wireguardServer:
          description: ""
          type: string
        attestationServer:
          description: ""
          type: string
        internalRemoteControlServer:
          description: ""
          type: string
        enclaveIdent:
          description: ""
          type: string
        signerIdent:
          description: ""
          type: string
        wireguardPublicKey:
          description: ""
          type: string
        environment:
          $ref: '#/components/schemas/json_Environment'
      title: EnclaveProcess
      type: object
    json_EnclaveRunRequest:
      description: ""
      example:
        ports:
        - name: '...'
          port: '...'
          protocol: '...'
        - name: '...'
          port: '...'
          protocol: '...'
        environmentUUID: '...'
        usingDefaultRunConfig: true
        enclaveExecutionType: '...'
        wireguardPublicKey: '...'
      properties:
        ports:
          description: ""
          items:
            $ref: '#/components/schemas/json_EnclavePort'
          type: array
        environmentUUID:
          description: ""
          type: string
        usingDefaultRunConfig:
          description: ""
          type: boolean
        enclaveExecutionType:
          description: ""
          type: string
        wireguardPublicKey:
          description: ""
          type: string
      title: EnclaveRunRequest
      type: object
    json_EnclaveRunningAttestation:
      description: ""
      example:
        nodeInfo:
          operatingSystemUptime: 12345
          sgxInfo:
            status: '...'
            version: '...'
          ipfsInfo:
            protocolVersion: '...'
            agentVersion: '...'
            id: '...'
            publicKey: '...'
            swarmConnection: '...'
          status: '...'
          owner: '...'
          cpuLogicalCount: 12345
          hardwareFirmware: '...'
          hardwareBaseboard: '...'
          operatingSystem: '...'
          cpuFamily: '...'
          publicKey: '...'
          cpuFrequency: '...'
          connectionURL: '...'
          memory: '...'
          processors:
          - '...'
          - '...'
          cpuModel: '...'
          cpuPhysicalCores: 12345
        enclaveProcess:
          process:
            outputStream: {}
            errorStream: {}
            inputStream: {}
            alive: true
          portMapping:
            property1: '...'
            property2: '...'
          status: '...'
          ports:
          - name: '...'
            port: '...'
            protocol: '...'
          - name: '...'
            port: '...'
            protocol: '...'
          enclaveInputstream: {}
          consoleOutput: '...'
          internalAttesationServer: '...'
          internalWireguardServer: '...'
          wgInterface:
            port: '...'
            address: '...'
            name: '...'
          internalIdent: '...'
          startupTime: '...'
          remoteControlServer: '...'
          startupCMD: '...'
          endingTime: '...'
          publicIdent: '...'
          wireguardServer: '...'
          attestationServer: '...'
          internalRemoteControlServer: '...'
          enclaveIdent: '...'
          signerIdent: '...'
          wireguardPublicKey: '...'
          environment:
            description: '...'
            roothash: '...'
            defaultRunConfiguration: {}
            published: true
            name: '...'
            rootHashOffset: '...'
            content:
            - '...'
            - '...'
            size: '...'
            ipfsHash: '...'
            packages:
            - '...'
            - '...'
            uuid: '...'
      properties:
        nodeInfo:
          $ref: '#/components/schemas/json_NodeInfo'
        enclaveProcess:
          $ref: '#/components/schemas/json_EnclaveProcess'
      title: EnclaveRunningAttestation
      type: object
    json_EnclaveRunningAttestationApproval:
      allOf:
      - $ref: '#/components/schemas/json_EnclaveRunningAttestation'
      - $ref: '#/components/schemas/json_EnclaveRunningAttestationApproval_allOf'
      description: ""
      title: EnclaveRunningAttestationApproval
    json_Environment:
      description: ""
      example:
        description: '...'
        roothash: '...'
        defaultRunConfiguration:
          args:
          - '...'
          - '...'
          environment:
            property1: '...'
            property2: '...'
          disk_config:
          - readonly: true
            roothash: '...'
            roothash_offset: 12345
            disk: '...'
          - readonly: true
            roothash: '...'
            roothash_offset: 12345
            disk: '...'
          run: '...'
        published: true
        name: '...'
        rootHashOffset: '...'
        content:
        - '...'
        - '...'
        size: '...'
        ipfsHash: '...'
        packages:
        - '...'
        - '...'
        uuid: '...'
      properties:
        description:
          description: ""
          type: string
        roothash:
          description: ""
          type: string
        defaultRunConfiguration:
          $ref: '#/components/schemas/json_RunConfig'
        published:
          description: ""
          type: boolean
        name:
          description: ""
          type: string
        rootHashOffset:
          description: ""
          type: string
        content:
          description: ""
          items:
            type: string
          type: array
        size:
          description: ""
          type: string
        ipfsHash:
          description: ""
          type: string
        packages:
          description: ""
          items:
            type: string
          type: array
        uuid:
          description: ""
          type: string
      title: Environment
      type: object
    json_EnvironmentPublishingRequest:
      description: ""
      example:
        name: '...'
        isPublic: '...'
        content: '...'
        size: '...'
        ipfsPrimaryPeer: '...'
        uuid: '...'
        packages: '...'
        ipfsHash: '...'
        description: '...'
      properties:
        name:
          description: ""
          type: string
        isPublic:
          description: ""
          type: string
        content:
          description: ""
          type: string
        size:
          description: ""
          type: string
        ipfsPrimaryPeer:
          description: ""
          type: string
        uuid:
          description: ""
          type: string
        packages:
          description: ""
          type: string
        ipfsHash:
          description: ""
          type: string
        description:
          description: ""
          type: string
      title: EnvironmentPublishingRequest
      type: object
    json_IPFSSystemInfo:
      description: ""
      example:
        protocolVersion: '...'
        agentVersion: '...'
        id: '...'
        publicKey: '...'
        swarmConnection: '...'
      properties:
        protocolVersion:
          description: ""
          type: string
        agentVersion:
          description: ""
          type: string
        id:
          description: ""
          type: string
        publicKey:
          description: ""
          type: string
        swarmConnection:
          description: ""
          type: string
      title: IPFSSystemInfo
      type: object
    json_InputStream:
      description: ""
      example: {}
      title: InputStream
      type: object
    json_MDN_A_UserObject:
      description: ""
      example:
        lastActive: '...'
        created: '...'
        image: '...'
        userName: '...'
        activated: '...'
      properties:
        lastActive:
          description: ""
          type: string
        created:
          description: ""
          type: string
        image:
          description: ""
          type: string
        userName:
          description: ""
          type: string
        activated:
          description: ""
          type: string
      title: MDN_A_UserObject
      type: object
    json_MDN_Certificate:
      description: ""
      example:
        pem: '...'
      properties:
        pem:
          description: ""
          type: string
      title: MDN_Certificate
      type: object
    json_MDN_Data:
      description: ""
      example:
        data: '...'
      properties:
        data:
          description: ""
          type: string
      title: MDN_Data
      type: object
    json_MDN_MailAddress:
      description: ""
      example:
        mail: '...'
      properties:
        mail:
          description: ""
          type: string
      title: MDN_MailAddress
      type: object
    json_MDN_OAuthToken:
      description: ""
      example:
        verifier: '...'
        token: '...'
      properties:
        verifier:
          description: ""
          type: string
        token:
          description: ""
          type: string
      title: MDN_OAuthToken
      type: object
    json_MDN_PasswordReset:
      description: ""
      example:
        token: '...'
        mail: '...'
        password: '...'
      properties:
        token:
          description: ""
          type: string
        mail:
          description: ""
          type: string
        password:
          description: ""
          type: string
      title: MDN_PasswordReset
      type: object
    json_MDN_Setting:
      description: ""
      example:
        description: '...'
        name: '...'
        id: '...'
      properties:
        description:
          description: ""
          type: string
        name:
          description: ""
          type: string
        id:
          description: ""
          type: string
      title: MDN_Setting
      type: object
    json_MDN_SocialUserObject:
      description: ""
      example:
        ident: '...'
        platform: '...'
        image: '...'
      properties:
        ident:
          description: ""
          type: string
        platform:
          description: ""
          type: string
        image:
          description: ""
          type: string
      title: MDN_SocialUserObject
      type: object
    json_MDN_Token:
      description: ""
      example:
        token: '...'
      properties:
        token:
          description: ""
          type: string
      title: MDN_Token
      type: object
    json_MDN_User:
      allOf:
      - $ref: '#/components/schemas/json_MDN_A_UserObject'
      - $ref: '#/components/schemas/json_MDN_User_allOf'
      description: ""
      title: MDN_User
    json_MDN_UserCredentials:
      description: ""
      example:
        username: '...'
        password: '...'
      properties:
        username:
          description: ""
          type: string
        password:
          description: ""
          type: string
      title: MDN_UserCredentials
      type: object
    json_MDN_UserProfileImage:
      description: ""
      example:
        image: '...'
        id: '...'
      properties:
        image:
          description: ""
          type: string
        id:
          description: ""
          type: string
      title: MDN_UserProfileImage
      type: object
    json_MDN_UserSetting:
      allOf:
      - $ref: '#/components/schemas/json_MDN_Setting'
      - $ref: '#/components/schemas/json_MDN_UserSetting_allOf'
      description: ""
      title: MDN_UserSetting
    json_NetworkInterface:
      description: ""
      example:
        address: '...'
        name: '...'
      properties:
        address:
          description: ""
          type: string
        name:
          description: ""
          type: string
      title: NetworkInterface
      type: object
    json_NodeInfo:
      description: ""
      example:
        operatingSystemUptime: 12345
        sgxInfo:
          status: '...'
          version: '...'
        ipfsInfo:
          protocolVersion: '...'
          agentVersion: '...'
          id: '...'
          publicKey: '...'
          swarmConnection: '...'
        status: '...'
        owner: '...'
        cpuLogicalCount: 12345
        hardwareFirmware: '...'
        hardwareBaseboard: '...'
        operatingSystem: '...'
        cpuFamily: '...'
        publicKey: '...'
        cpuFrequency: '...'
        connectionURL: '...'
        memory: '...'
        processors:
        - '...'
        - '...'
        cpuModel: '...'
        cpuPhysicalCores: 12345
      properties:
        operatingSystemUptime:
          description: ""
          type: number
        sgxInfo:
          $ref: '#/components/schemas/json_SGXInfo'
        ipfsInfo:
          $ref: '#/components/schemas/json_IPFSSystemInfo'
        status:
          description: ""
          type: string
        owner:
          description: ""
          type: string
        cpuLogicalCount:
          description: ""
          format: int32
          type: integer
        hardwareFirmware:
          description: ""
          type: string
        hardwareBaseboard:
          description: ""
          type: string
        operatingSystem:
          description: ""
          type: string
        cpuFamily:
          description: ""
          type: string
        publicKey:
          description: ""
          type: string
        cpuFrequency:
          description: ""
          type: string
        connectionURL:
          description: ""
          type: string
        memory:
          description: ""
          type: string
        processors:
          description: ""
          items:
            type: string
          type: array
        cpuModel:
          description: ""
          type: string
        cpuPhysicalCores:
          description: ""
          format: int32
          type: integer
      title: NodeInfo
      type: object
    json_OutputStream:
      description: ""
      example: {}
      title: OutputStream
      type: object
    json_Process:
      description: ""
      example:
        outputStream: {}
        errorStream: {}
        inputStream: {}
        alive: true
      properties:
        outputStream:
          description: ""
          example: {}
          title: OutputStream
          type: object
        errorStream:
          description: ""
          example: {}
          title: InputStream
          type: object
        inputStream:
          description: ""
          example: {}
          title: InputStream
          type: object
        alive:
          description: ""
          type: boolean
      title: Process
      type: object
    json_RunConfig:
      description: ""
      example:
        args:
        - '...'
        - '...'
        environment:
          property1: '...'
          property2: '...'
        disk_config:
        - readonly: true
          roothash: '...'
          roothash_offset: 12345
          disk: '...'
        - readonly: true
          roothash: '...'
          roothash_offset: 12345
          disk: '...'
        run: '...'
      properties:
        args:
          description: ""
          items:
            type: string
          type: array
        environment:
          additionalProperties:
            type: string
          description: ""
          type: object
        disk_config:
          description: ""
          items:
            $ref: '#/components/schemas/json_Disk_config'
          type: array
        run:
          description: ""
          type: string
      title: RunConfig
      type: object
    json_SGXInfo:
      description: ""
      example:
        status: '...'
        version: '...'
      properties:
        status:
          description: ""
          type: string
        version:
          description: ""
          type: string
      title: SGXInfo
      type: object
    json_SignedData:
      description: ""
      example:
        data: '...'
        fingerpint: '...'
        signature: '...'
      properties:
        data:
          description: ""
          type: string
        fingerpint:
          description: ""
          type: string
        signature:
          description: ""
          type: string
      title: SignedData
      type: object
    json_SignedData_utils:
      description: ""
      example:
        fingerpint: '...'
        data: '...'
        signature: '...'
      properties:
        fingerpint:
          description: ""
          type: string
        data:
          description: ""
          type: string
        signature:
          description: ""
          type: string
      title: SignedData
      type: object
    json_WireguardInterface:
      allOf:
      - $ref: '#/components/schemas/json_NetworkInterface'
      - $ref: '#/components/schemas/json_WireguardInterface_allOf'
      description: ""
      title: WireguardInterface
    xml_ns0_MDN_Setting:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_MDN_Setting_allOf'
      description: ""
      title: MDN_Setting
    xml_ns0_MDN_UserProfileImage:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_MDN_UserProfileImage_allOf'
      description: ""
      title: MDN_UserProfileImage
    xml_ns0_MDN_UserSetting:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_MDN_Setting'
      - $ref: '#/components/schemas/xml_ns0_MDN_UserSetting_allOf'
      description: ""
      title: MDN_UserSetting
    xml_ns0_enclaveProcess:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_enclaveProcess_allOf'
      description: ""
      title: enclaveProcess
    xml_ns0_enclaveRunningAttestation:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_enclaveRunningAttestation_allOf'
      description: ""
      title: enclaveRunningAttestation
    xml_ns0_enclaveRunningAttestationApproval:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_enclaveRunningAttestation'
      - $ref: '#/components/schemas/xml_ns0_enclaveRunningAttestationApproval_allOf'
      description: ""
      title: enclaveRunningAttestationApproval
    xml_ns0_environment:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_environment_allOf'
      description: ""
      title: environment
    xml_ns0_IPFSSystemInfo:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_IPFSSystemInfo_allOf'
      description: ""
      title: IPFSSystemInfo
    xml_ns0_networkInterface:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_networkInterface_allOf'
      description: ""
      title: networkInterface
    xml_ns0_nodeInfo:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_nodeInfo_allOf'
      description: ""
      title: nodeInfo
    xml_ns0_SGXInfo:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_SGXInfo_allOf'
      description: ""
      title: SGXInfo
    xml_ns0_signedData:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_signedData_allOf'
      description: ""
      title: signedData
    xml_ns0_wireguardInterface:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_networkInterface'
      - $ref: '#/components/schemas/xml_ns0_wireguardInterface_allOf'
      description: ""
      title: wireguardInterface
    xml_ns0_enclavePort:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_enclavePort_allOf'
      description: ""
      title: enclavePort
    xml_ns0_disk_config:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_disk_config_allOf'
      description: ""
      title: disk_config
    xml_ns0_runConfig:
      allOf:
      - $ref: '#/components/schemas/xml_ns0_runConfig_allOf'
      description: ""
      title: runConfig
    xml_ns0_inputStream:
      allOf:
      - type: object
      description: ""
      title: inputStream
    xml_ns0_process:
      allOf:
      - type: object
      description: ""
      title: process
    json_EnclaveRunningAttestationApproval_allOf:
      properties:
        approved:
          description: ""
          type: string
      type: object
    json_MDN_User_allOf:
      properties:
        settings:
          description: ""
          items:
            $ref: '#/components/schemas/json_MDN_UserSetting'
          type: array
        credentials:
          $ref: '#/components/schemas/json_MDN_UserCredentials'
        firstName:
          description: ""
          type: string
        lastName:
          description: ""
          type: string
        mail:
          description: ""
          type: string
        socialAccounts:
          description: ""
          items:
            $ref: '#/components/schemas/json_MDN_SocialUserObject'
          type: array
        guid:
          description: ""
          type: string
      type: object
    json_MDN_UserSetting_allOf:
      properties:
        value:
          description: ""
          type: string
      type: object
    json_WireguardInterface_allOf:
      properties:
        port:
          description: ""
          type: string
      type: object
    xml_ns0_MDN_Setting_allOf:
      properties:
        description:
          description: ""
          type: string
          xml:
            namespace: ""
        id:
          description: ""
          type: string
          xml:
            namespace: ""
        name:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_MDN_UserProfileImage_allOf:
      properties:
        id:
          description: ""
          type: string
          xml:
            namespace: ""
        image:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_MDN_UserSetting_allOf:
      properties:
        value:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_enclaveProcess_allOf:
      properties:
        attestationServer:
          description: ""
          type: string
          xml:
            namespace: ""
        consoleOutput:
          description: ""
          type: string
          xml:
            namespace: ""
        enclaveIdent:
          description: ""
          type: string
          xml:
            namespace: ""
        enclaveInputstream:
          $ref: '#/components/schemas/xml_ns0_inputStream'
        endingTime:
          description: ""
          type: string
          xml:
            namespace: ""
        environment:
          $ref: '#/components/schemas/xml_ns0_environment'
        internalAttesationServer:
          description: ""
          type: string
          xml:
            namespace: ""
        internalIdent:
          description: ""
          type: string
          xml:
            namespace: ""
        internalRemoteControlServer:
          description: ""
          type: string
          xml:
            namespace: ""
        internalWireguardServer:
          description: ""
          type: string
          xml:
            namespace: ""
        portMapping:
          description: ""
          properties: {}
          type: object
          xml:
            namespace: ""
        ports:
          description: ""
          items:
            $ref: '#/components/schemas/xml_ns0_enclavePort'
          type: array
          xml:
            namespace: ""
        process:
          $ref: '#/components/schemas/xml_ns0_process'
        publicIdent:
          description: ""
          type: string
          xml:
            namespace: ""
        remoteControlServer:
          description: ""
          type: string
          xml:
            namespace: ""
        signerIdent:
          description: ""
          type: string
          xml:
            namespace: ""
        startupCMD:
          description: ""
          type: string
          xml:
            namespace: ""
        startupTime:
          description: ""
          type: string
          xml:
            namespace: ""
        status:
          description: ""
          type: string
          xml:
            namespace: ""
        wgInterface:
          $ref: '#/components/schemas/xml_ns0_wireguardInterface'
        wireguardPublicKey:
          description: ""
          type: string
          xml:
            namespace: ""
        wireguardServer:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_enclaveRunningAttestation_allOf:
      properties:
        enclaveProcess:
          $ref: '#/components/schemas/xml_ns0_enclaveProcess'
        nodeInfo:
          $ref: '#/components/schemas/xml_ns0_nodeInfo'
      type: object
    xml_ns0_enclaveRunningAttestationApproval_allOf:
      properties:
        approved:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_environment_allOf:
      properties:
        content:
          description: ""
          items:
            type: string
          type: array
          xml:
            namespace: ""
        defaultRunConfiguration:
          $ref: '#/components/schemas/xml_ns0_runConfig'
        description:
          description: ""
          type: string
          xml:
            namespace: ""
        ipfsHash:
          description: ""
          type: string
          xml:
            namespace: ""
        name:
          description: ""
          type: string
          xml:
            namespace: ""
        packages:
          description: ""
          items:
            type: string
          type: array
          xml:
            namespace: ""
        published:
          description: ""
          type: boolean
          xml:
            namespace: ""
        rootHashOffset:
          description: ""
          type: string
          xml:
            namespace: ""
        roothash:
          description: ""
          type: string
          xml:
            namespace: ""
        size:
          description: ""
          type: string
          xml:
            namespace: ""
        uuid:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_IPFSSystemInfo_allOf:
      properties:
        agentVersion:
          description: ""
          type: string
          xml:
            namespace: ""
        id:
          description: ""
          type: string
          xml:
            namespace: ""
        protocolVersion:
          description: ""
          type: string
          xml:
            namespace: ""
        publicKey:
          description: ""
          type: string
          xml:
            namespace: ""
        swarmConnection:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_networkInterface_allOf:
      properties:
        address:
          description: ""
          type: string
          xml:
            namespace: ""
        name:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_nodeInfo_allOf:
      properties:
        connectionURL:
          description: ""
          type: string
          xml:
            namespace: ""
        cpuFamily:
          description: ""
          type: string
          xml:
            namespace: ""
        cpuFrequency:
          description: ""
          type: string
          xml:
            namespace: ""
        cpuLogicalCount:
          description: ""
          format: int32
          type: integer
          xml:
            namespace: ""
        cpuModel:
          description: ""
          type: string
          xml:
            namespace: ""
        cpuPhysicalCores:
          description: ""
          format: int32
          type: integer
          xml:
            namespace: ""
        hardwareBaseboard:
          description: ""
          type: string
          xml:
            namespace: ""
        hardwareFirmware:
          description: ""
          type: string
          xml:
            namespace: ""
        ipfsInfo:
          $ref: '#/components/schemas/xml_ns0_IPFSSystemInfo'
        memory:
          description: ""
          type: string
          xml:
            namespace: ""
        operatingSystem:
          description: ""
          type: string
          xml:
            namespace: ""
        operatingSystemUptime:
          description: ""
          format: int64
          type: integer
          xml:
            namespace: ""
        owner:
          description: ""
          type: string
          xml:
            namespace: ""
        processors:
          description: ""
          items:
            type: string
          type: array
          xml:
            namespace: ""
        publicKey:
          description: ""
          type: string
          xml:
            namespace: ""
        sgxInfo:
          $ref: '#/components/schemas/xml_ns0_SGXInfo'
        status:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_SGXInfo_allOf:
      properties:
        status:
          description: ""
          type: string
          xml:
            namespace: ""
        version:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_signedData_allOf:
      properties:
        data:
          description: ""
          type: string
          xml:
            namespace: ""
        fingerpint:
          description: ""
          type: string
          xml:
            namespace: ""
        signature:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_wireguardInterface_allOf:
      properties:
        port:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_enclavePort_allOf:
      properties:
        name:
          description: ""
          type: string
          xml:
            namespace: ""
        port:
          description: ""
          type: string
          xml:
            namespace: ""
        protocol:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
    xml_ns0_disk_config_allOf:
      properties:
        disk:
          description: ""
          type: string
          xml:
            namespace: ""
        readonly:
          description: ""
          type: boolean
          xml:
            namespace: ""
        roothash:
          description: ""
          type: string
          xml:
            namespace: ""
        roothash_offset:
          description: ""
          format: int32
          type: integer
          xml:
            namespace: ""
      type: object
    xml_ns0_runConfig_allOf:
      properties:
        args:
          description: ""
          items:
            type: string
          type: array
          xml:
            namespace: ""
        disk_config:
          description: ""
          items:
            $ref: '#/components/schemas/xml_ns0_disk_config'
          type: array
          xml:
            namespace: ""
        environment:
          description: ""
          properties: {}
          type: object
          xml:
            namespace: ""
        run:
          description: ""
          type: string
          xml:
            namespace: ""
      type: object
